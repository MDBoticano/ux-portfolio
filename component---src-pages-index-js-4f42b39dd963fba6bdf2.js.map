{"version":3,"sources":["webpack:///./src/components/projectPreview.js","webpack:///./src/components/project.js","webpack:///./src/components/info.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["ProjectPreview","_ref","title","description","link","react_default","a","createElement","className","gatsby_browser_entry","to","Project","image","projectPreview","Info","ProjectThumbnails","_502059246","data","ftkImage","gatsby_image_default","fluid","FTK","childImageSharp","mmImage","MM","ogImage","OG","sdImage","SD","project","IndexPage","Fragment","seo","info","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","__webpack_require__","createHTML","url","this"],"mappings":"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","file":"component---src-pages-index-js-4f42b39dd963fba6bdf2.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst ProjectPreview = ({ title, description, link }) => {\n  return (\n    <div className=\"project-summary\">\n      <Link to={link} >\n        <p className=\"project-title\"> { title } </p>\n      </Link>\n      <p className=\"project-description\"> { description } </p>\n    </div>\n  )\n}\n\nexport default ProjectPreview","import React from 'react'\nimport { Link } from 'gatsby'\nimport ProjectPreview from './projectPreview'\n\nconst Project = ({ title, description, link, image }) => {\n  return (\n    <li className = \"project-row\">\n      <div className = \"project-image\">\n        <Link to = { link }>\n          {image}\n        </Link>\n\n      </div>\n\n      <ProjectPreview \n        title = { title }\n        description = { description }\n        link = { link }\n      />\n\n    </li>\n  )\n}\n\nexport default Project","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Project from './project'\n\nconst Info = () => {\n  /* Queries: Have to be done individually until queries take variables */\n  const ProjectThumbnails = useStaticQuery(graphql`\n    query {\n      FTK: file(relativePath: { eq: \"feed-the-kids/ftk_thumbnail.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 500) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n      MM: file(relativePath: { eq: \"matchmaker/mm_poster_thumbnail.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 500) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n      OG: file(relativePath: { eq: \"oilgo/og_thumbnail.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 500) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n      SD: file(relativePath: { eq: \"uc-socially-driven/sd_thumbnail.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 500) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n    }\n  `)\n  \n  /* Turn query results into Gatsby Image, then pass as prop */\n  const ftkImage = <Img fluid={ProjectThumbnails.FTK.childImageSharp.fluid}/>\n  const mmImage = <Img fluid={ProjectThumbnails.MM.childImageSharp.fluid}/>\n  const ogImage = <Img fluid={ProjectThumbnails.OG.childImageSharp.fluid}/>\n  const sdImage = <Img fluid={ProjectThumbnails.SD.childImageSharp.fluid}/>\n\n  return (\n    <div className=\"info-container\">\n    <div className=\"info\">\n      <p className=\"mb-name\">Marlo&nbsp;Boticano</p>\n      <p className=\"mb-title\">User Researcher</p>\n      \n      <ul className=\"projects-grid\">\n      <Project \n        title='Feed the Kids'\n        link='/projects/feed-the-kids'\n        description='How might we help a non-profit fight food insecurity more efficiently?'\n        image={ftkImage}\n      />\n\n      <Project \n        title='Matchmaker' \n        link='/projects/matchmaker'\n        description='How might we better bridge the gap from graduation to employment?'\n        image={mmImage}\n      />\n\n      <Project\n        title='OilGo'\n        link='/projects/oilgo'\n        description='How might we reduce the frustrations of car maintenance?'\n        image={ogImage}\n      />\n\n      <Project\n        title='UC Socially Driven'\n        link='/projects/uc-socially-driven'\n        description='How might we encourage social activities that foster a better sense of community?'\n        image={sdImage}\n      />\n      </ul>\n    </div>\n    </div>\n  )\n}\n\nexport default Info","import React from \"react\"\n\nimport SEO from \"../components/seo\"\nimport Info from \"../components/info\"\n// import Layout from \"../components/layout\"\n\nconst IndexPage = () => {\n  return (\n    <>\n      <SEO title=\"Home\" />\n      <Info />\n    </>\n  )\n}\n\nexport default IndexPage","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}