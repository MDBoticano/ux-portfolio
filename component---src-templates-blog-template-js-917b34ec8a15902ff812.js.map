{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/templates/blogTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Footer","react_default","a","createElement","className","gatsby_browser_entry","to","Template","_ref","markdownRemark","data","html","frontmatter","layout","dangerouslySetInnerHTML","__html","footer","__webpack_require__","d","__webpack_exports__","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","children","id","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"uIAWeA,EARA,WACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,cCAS,SAASC,EAATC,GAEZ,IACOC,EADPD,EADDE,KAEQD,eACaE,GAASF,EAAtBG,YAAsBH,EAATE,MACrB,OACEV,EAAAC,EAAAC,cAACU,EAAA,EAAD,KACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVU,wBAAyB,CAAEC,OAAQJ,OAIzCV,EAAAC,EAAAC,cAACa,EAAD,QAtBRC,EAAAC,EAAAC,EAAA,4BAAAZ,IAAAU,EAAAC,EAAAC,EAAA,8BAAAC,IA4BO,IAAMA,EAAS,kCC5BtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAT,EAAA,GAAAU,EAAAV,EAAAW,EAAAF,GAAAT,EAAA,KAaeY,IARA,SAAArB,GAAkB,IAAfsB,EAAetB,EAAfsB,SAChB,OACEH,EAAAzB,EAAAC,cAAA,OAAK4B,GAAG,QACLD,sCCRP,IAAAJ,EAAAT,EAAA,GAAAU,EAAAV,EAAAW,EAAAF,GAAAM,EAAAf,EAAA,IAAAgB,EAAAhB,EAAAW,EAAAI,GAAAf,EAAAC,EAAAC,EAAA,sBAAAc,EAAA/B,IAAAe,EAAA,KAAAA,EAAA,GAcyBiB,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAA9B,GAAiC,IAA9B+B,EAA8B/B,EAA9B+B,SAAUC,EAAoBhC,EAApBgC,cACpC,OAAKA,EAGEJ,IAAMjC,cAAcsC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-templates-blog-template-js-917b34ec8a15902ff812.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <Link to=\"/contents\">Contents</Link>\n    </div>\n  )\n}\n\nexport default Footer","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from '../components/layout'\nimport Footer from '../components/footer'\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <div className=\"blog\">\n        <div className=\"blog-post-container\">\n          <div className=\"blog-post\">\n            <div\n              className=\"blog-post-content\"\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\n\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <div id=\"main\">\n      {children}\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}