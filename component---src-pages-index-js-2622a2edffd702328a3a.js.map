{"version":3,"sources":["webpack:///./src/components/info.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["Info","react_default","a","createElement","className","id","IndexPage","layout","seo","title","info","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Layout","_ref","children","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"8HAWeA,EATF,WACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIE,GAAG,aAAP,kBACAJ,EAAAC,EAAAC,cAAA,MAAIE,GAAG,cAAP,mCCSSC,UATG,WAChB,OACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,MAAM,SACXR,EAAAC,EAAAC,cAACO,EAAD,0CCVN,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAC,EAAA,KAaeG,IARA,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAChB,OACEJ,EAAAX,EAAAC,cAAA,OAAKE,GAAG,QACLY,qFCIP,SAASC,EAATF,GAAiD,IAAlCG,EAAkCH,EAAlCG,YAAaC,EAAqBJ,EAArBI,KAAMC,EAAeL,EAAfK,KAAMZ,EAASO,EAATP,MAC9Ba,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAzB,EAAAC,cAACyB,EAAA1B,EAAD,CACE2B,eAAgB,CACdT,QAEFX,MAAOA,EACPqB,cAAa,QAAUR,EAAKI,aAAajB,MACzCY,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASvB,GAEX,CACEwB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAASvB,GAEX,CACEsB,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED","file":"component---src-pages-index-js-2622a2edffd702328a3a.js","sourcesContent":["import React from 'react'\n\nconst Info = () => {\n  return (\n    <div className=\"info\">\n      <h1 id=\"text-name\">Marlo&nbsp;Boticano</h1>\n      <h2 id=\"text-email\">m.boticano@gmail.com</h2>\n    </div>\n  )\n}\n\nexport default Info","import React from \"react\"\n\nimport SEO from \"../components/seo\"\nimport Info from \"../components/info\"\nimport Layout from \"../components/layout\"\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Info />\n    </ Layout>\n  )\n}\n\nexport default IndexPage","import React from \"react\"\n\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  return (\n    <div id=\"main\">\n      {children}\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}